# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Application {
  createdAt: DateTimeISO!
  id: String!
  jobId: String!
  status: String!
  userId: String!
}

input ApplicationInput {
  jobId: String!
}

type AuthPayload {
  accessToken: String!
  name: String!
  refreshToken: String!
}

type BookMark {
  createdAt: DateTimeISO!
  id: String!
  jobsId: [String!]!
  userId: String!
}

type BookMarkAndCount {
  countOfJobs: Int!
  createdAt: DateTimeISO!
  id: String!
  jobsId: [String!]!
  userId: String!
}

type Category {
  createdAt: DateTimeISO!
  id: String!
  jobs: [Job!]!
  name: String!
}

type CategoryAndCount {
  countOfJobs: Int!
  createdAt: DateTimeISO!
  id: String!
  name: String!
}

input CreateBookMarkInput {
  jobId: String!
}

input CreateCategoryInput {
  name: String!
}

input CreateJobInput {
  categoryId: String!
  company: String!
  description: String!
  featured: Boolean!
  location: String!
  requirements: [String!]!
  salary: String!
  title: String!
}

input CreateReviewInput {
  content: String!
  jobId: String!
  rating: Float!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Job {
  categoryId: String!
  company: String!
  createdAt: DateTimeISO!
  description: String!
  featured: Boolean!
  id: String!
  location: String!
  requirements: [String!]!
  salary: String!
  title: String!
}

input LimitInput {
  limit: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input Mongo {
  id: String!
}

type Mutation {
  addBookMark(input: CreateBookMarkInput!): BookMark!
  apply(input: ApplicationInput!): Application
  createCategory(input: CreateCategoryInput!): Category
  createJob(input: CreateJobInput!): Job
  createReview(input: CreateReviewInput!): Review!
  deleteCategory(input: Mongo!): Category
  deleteJob(input: Mongo!): Job
  deleteProfile: UserProfile!
  deleteReview(input: Mongo!): Review!
  getUserProfiles: [UserProfile!]
  login(input: LoginInput!): AuthPayload
  refreshToken(refreshToken: String!): AuthPayload
  removeBookMark(input: Mongo!): BookMark
  signup(input: SignupInput!): AuthPayload
  updateCategory(input: UpdateCategoryInput!): Category
  updateJob(input: UpdateJobInput!): Job
  updateProfile(input: UpdateUserProfile!): UserProfile!
  updateReview(input: UpdateReviewInput!): Review
  updateStatus(input: UpdateApplication!): Application
  withdraw(input: Mongo!): Application
}

type Query {
  getApplications(input: Mongo!): [Application!]
  getBookedMarkJobs: [Job!]
  getCategories: [Category!]
  getFeaturedJobs: [Job!]!
  getHello: String!
  getJobById(input: Mongo!): Job
  getJobCountByCategory(input: SearchCategoryInput!): CategoryAndCount
  getJobs: [Job!]
  getJobsByCategory(input: SearchCategoryInput!): Category
  getJobsByTitle(input: Search!): [Job!]
  getRecentJobs: [Job!]!
  getReviewsForJobs(input: Mongo!): [Review!]!
  getSimilarJobs(input: Mongo!): [Job!]!
  getTopCategories(input: LimitInput!): [TopCategory!]!
  getUserApplications: [Application!]
  getUserBookmarkCount: BookMarkAndCount
}

type Review {
  content: String!
  createdAt: DateTimeISO!
  id: String!
  jobId: String!
  rating: Float!
}

input Search {
  title: String!
}

input SearchCategoryInput {
  name: String!
}

input SignupInput {
  email: String!
  name: String!
  password: String!
}

enum Status {
  Accepted
  Pending
  Rejected
}

type TopCategory {
  _id: String!
  countOfJobs: Int!
  name: String!
}

input UpdateApplication {
  applicationId: String!
  status: Status!
}

input UpdateCategoryInput {
  categoryId: String!
  name: String!
}

input UpdateJobInput {
  categoryId: String
  company: String
  description: String
  featured: Boolean
  jobId: String!
  location: String
  requirements: [String!]
  salary: String
  title: String
}

input UpdateReviewInput {
  content: String
  rating: Float
  reviewId: String!
}

input UpdateUserProfile {
  name: String!
  password: String!
}

type UserProfile {
  email: String!
  name: String!
}